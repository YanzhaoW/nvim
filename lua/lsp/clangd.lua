-- local handler = require("lsp.handler")
-- local attach = require("lsp.attach")
-- local capabilities = require("lsp.capability")
-- local clangd_ext_handler = require("lsp-status").extensions.clangd.setup()

-- local capabilities = require("lsp.capability")
-- local M = {}

-- M.setup = function()
-- 	vim.lsp.config.clangd = {
-- 		filetypes = { "c", "cpp", "objc", "objcpp", "cuda" },
-- 		capabilities = capabilities,
-- 		cmd = {
-- 			-- see clangd --help-hidden
-- 			"clangd",
-- 			"--background-index",
-- 			"--clang-tidy",
-- 			"--all-scopes-completion",
-- 			"--header-insertion-decorators",
-- 			"--experimental-modules-support",
-- 			"--pch-storage=memory",
-- 			"--completion-style=bundled",
-- 			"--cross-file-rename",
-- 			"--header-insertion=iwyu",
-- 		},
-- 		init_options = {
-- 			clangdFileStatus = true, -- Provides information about activity on clangdâ€™s per-file worker thread
-- 			usePlaceholders = true,
-- 			completeUnimported = true,
-- 			semanticHighlighting = true,
-- 			fallbackFlags = { "-std=c++23" },
-- 		},
-- 		root_markers = { ".clangd", ".git", "compile_commands.json" },
-- 		single_file_support = true,
-- 	}
-- end

-- return M
